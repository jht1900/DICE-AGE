// Play notes via the keyboard	// --------------------------------------------------------------------------------	// 2005.02.18	jht	Created. DICE music 	//	// Uses:	// NotePlayer	// spendTime	// GetKeys	// GetCurrentEventTime	//note = new NotePlayer( 33 /*-instrumentNumber-*/, 8 /*-npoly-*/ )	// instrument // 1 to 128	// npoly // number of notes that will play at once	//note.instrument = 20 // Church Organ	note.instrument = 1 // Accoustic Grand Piano	//note.npoly = 2 // number of notes at once	//note.play( 60 /*-pitch-*/, 127 /*-velocity-*/ )	//note.play( 60 /*-pitch-*/, 0 /*-velocity-*/ )	noteVelocity = 127;	reportTime = 0.2;	// exploreInstruments	exploreInstruments = 1;	exploreInstruments = 0;		// --------------------------------------------------------------------------------function noteOn(n) 	{		//print( "noteOn: n="+ n );		n = mapKeyNumToNote( knum );		if (exploreInstruments)		{			note.instrument = n;			note.play( 60, noteVelocity );		}		else		{			note.play( n, noteVelocity);		}	}		// --------------------------------------------------------------------------------function noteOff(n) 	{		n = mapKeyNumToNote( knum );		if (exploreInstruments)		{			note.play( 60, 0);		}		else		{			note.play( n, 0);		}	}		// --------------------------------------------------------------------------------function noteRamp(n, m) 	{		for (i = n; i < m; i++)			noteOn(i);	}		// --------------------------------------------------------------------------------function noteRampOff(n, m)	{		for (i = n; i < m; i++)			noteOff(i);	}		// --------------------------------------------------------------------------------	//noteOn( 60 )		//noteOn( 60*256+128 )		startTime = GetCurrentEventTime();	lastTime = startTime;	keyMap = Array();	kKeyUpCode = 102;	kKeyDownCode = 101;	kKeyLeftCode = 99;	kKeyRightCode = 100;		// --------------------------------------------------------------------------------function ProcessOneKeyNum( keyNum)	{		playNote = 1;		switch (keyNum)		{			case kKeyUpCode:				newInst = note.instrument;				newInst++;				if (newInst > 127)				{					newInst = 0;				}				note.instrument = newInst;				break;			case kKeyDownCode:				newInst = note.instrument;				newInst--;				if (newInst < 0)				{					newInst = 127;				}				note.instrument = newInst;				break;		}		return playNote;	}		// --------------------------------------------------------------------------------function ProcessNotes()	{		note.Task();		newKeyMap = Array()					GetKeys(newKeyMap);				reportNotes = "";		for (i = 0; i < 4; i++)		{			newWord = newKeyMap[i];			wordDiff = keyMap[i] ^ newWord;			keyMap[i] = newWord;			//if (wordDiff == 0)			//	continue;			for (j = 0, imask = 1; j < 32; j++, imask <<= 1)			{				if ( (wordDiff & imask) != 0)				{					knum = i*32 + j;					if (newWord & imask)					{						oldknum = knum;						if (ProcessOneKeyNum( knum))						{							noteOn( knum );						}					}					else					{						noteOff( knum);					}				}				if (newWord & imask)				{					knum = i*32 + j;					reportNotes += (knum+"("+mapKeyNumToNote( knum )+")"+" " );				}			}		}		keyReportWin.ctl2.title = reportNotes;	}		// --------------------------------------------------------------------------------function spendTime2()	{		now2 = GetCurrentEventTime();		if (now2 - lastTime > reportTime)		{			//print( "now "+now2 );			lastTime = now2;			diff = lastTime - startTime;			diff = Math.round( diff * 100 ) / 100;			if (keyReportWin)			{				keyReportWin.ctl1.title = diff + " " + note.instrument;			}		}				ProcessNotes();	}	function setupKeyReportWindow()	{		win = new Window( 640+80 /*-left-*/, 480 + 80 /*-top-*/, 400 /*-width-*/, 100 /*-height-*/ )		win.ctl1 = new Caption( win, "Note Player ", 10, 10, 380, 22 );		win.ctl1 = new TextField( win, "12345678 12345678 12345678 12345678 ", 10, 10+30, 380, 22 );		//win.ctl1.enabled = 1		win.ctl1.visible = 1		win.ctl2 = new TextField( win, "12345678 12345678 12345678 12345678 ", 10, 10+30+30, 380, 22 );		//win.ctl2.enabled = 1		win.ctl2.visible = 1				win.show();				win.title = "Note Player Report"				return win;	}	keyReportWin = setupKeyReportWindow();		// --------------------------------------------------------------------------------		keyLayoutAll = Array (		45, // esc		// Row 1		98,	// F1		96, // F2		123, // F3		110, // F4		120, // F5		121, // F6		122, // F7		124, // F8		125, // F9		117, // F10		127, // F11		119, // F12		113, // F13				42, // ` (Backquote)// Row 2		10, // 1		11, // 2		12, // 3		13, // 4		15, // 5		14, // 6		2, // 7		4, // 8		1, // 9		5, // 0		3, // -		0, // =		43, // DEL					40, // TAB		// Row 3		20, // Q		21, // W		22, // E		23, // R		9, // T		8, // Y		56, // U		58, // I		7, // O		59, // P		57, // [		6, // ]		50, // \				33, // caps lock	// Row 4		24, // A		25, // S		26, // D		27, // F		29, // G		28, // H		62, // J		48, // K		61, // L		49, // ;		63, // '		60, // Return						32, // Shift DUP	// Row 5		30, // Z		31, // X		16, // C		17, // V		19, // B		53, // N		54, // M		51, // ,		55, // .		52, // /		32, // shift					35, // CONTROL DUP		// Row 6		34, // OPTION DUP		47, // APPLE DUP		41, // SPACE		47, // APPLE DUP		34, // OPTION DUP		35, // CONTROL DUP				115, // F14			// Row 1, middle bank -----------------		105, // F15		114, // F16				106, // HELP		// Row 2, middle bank		107, // HOME		108, // PG UP		109, // DEL			// Row 3, middle bank		111, // END		97, // PG DN		102, // up			// Row 5, middle bank				99, // LEFT 			// Row 6, middle bank		101, // DOWN		100, // RIGHT				95, // CLR			// Row 2, right bank -----------------		73, // =		83, // / (slash)		91, // * (star)		65, // 7	// Row 3, right bank		67, // 8		68, // 9		86, // -				78, // 4	// Row 4, right bank		79, // 5		64, // 6		93, // +				75, // 1			// Row 5, right bank		76, // 2		77, // 3		84, // ENTER		74,	// 0			// Row 6, right bank		89 // .				);	// --------------------------------------------------------------------------------	keyNumToRemap = Array(		45, // esc		// Row 1		98,	// F1		96, // F2		123, // F3		110, // F4		120, // F5		121, // F6		122, // F7		124, // F8		125, // F9		117, // F10		127, // F11		119, // F12		113, // F13				42, // ` (Backquote)// Row 2		10, // 1		11, // 2		12, // 3		13, // 4		15, // 5		14, // 6		2, // 7		4, // 8		1, // 9		5, // 0		3, // -		0, // =		43, // DEL					40, // TAB		// Row 3		20, // Q		21, // W		22, // E		23, // R		9, // T		8, // Y		56, // U		58, // I		7, // O		59, // P		57, // [		6, // ]		50, // \				33, // caps lock	// Row 4		24, // A		25, // S		26, // D		27, // F		29, // G		28, // H		62, // J		48, // K		61, // L		49, // ;		63, // '		60, // Return						32, // Shift DUP	// Row 5		30, // Z		31, // X		16, // C		17, // V		19, // B		53, // N		54, // M		51, // ,		55, // .		52, // /		32 // shift		 );	// --------------------------------------------------------------------------------function mapKeyNumToNote( num )	{		return remapKeys[ num ] ;	}	// --------------------------------------------------------------------------------		remapKeys = Array();	function setupKeyRemap()	{		for (i = 0; i < 128; i++)			remapKeys[i] = i;		n = keyNumToRemap.length;		startNote = 36;		for (i = 0; i < n; i++, startNote++)			remapKeys[ keyNumToRemap[i] ] = startNote;	}		setupKeyRemap();		// --------------------------------------------------------------------------------	// --------------------------------------------------------------------------------	