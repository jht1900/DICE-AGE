// Apply effects to movie file frame-by-framelibpath = DocPath();inputFileName = "movie1.mov";outputFileName = "movie1-fr-delay2.mov";nwindim = 1src = new Movie();//src.pickFile();src.openFile( libpath+inputFileName );width = src.width;high = src.height;src.stop();img = new Image(width, high);src.output = img;winWidth = width*nwindim; winHigh = high*nwindim;//------------------------------------img2 = new Image(width, high);		// Create image buffer for the effecteff = new DelayEffect(); // Effect: The image difference is colorizedeff.input = img			// The image from the movie is feed to the effecteff.output = img2eff.delay = 40	// How much delay before image shows upeff.delay = 50win2 = new Window(5, 50, winWidth, winHigh);	// Window use to present the result of the Effectwin2.show();proj = new Projector();		// Project simply copies input to outputproj.input = img2;proj.output = win2;// -----------------------------------------------------load(libpath+"u_report.js");var report_win = setupReportWindow();movmak = new MovieMaker();//movmak.pickFile();movmak.timeScale = src.timeScale;movmak.frameDuration = 100;movmak.createFile( AppPath(), outputFileName);//frameRecordCount = 30 * 8;frameRecordCount = src.frameCount;processThem();function processThem(){	src.process();	eff.process();	proj.process();		if (frameRecordCount > 0) {		movmak.addFrame( img2 );		frameRecordCount--;		src.goNextFrame();	}	else {		movmak.finish();	}		//stepColorCycle(colCycle);	issueReport(report_win);}function spendTime(){	processThem();}function minfo(){	return "frameCount:"+ src.frameCount +		" currentTime:"+ src.currentTime +		" timeScale:"+ src.timeScale +		" width:"+ src.width +		" height:"+ src.height +		" duration:"+ src.duration ;}