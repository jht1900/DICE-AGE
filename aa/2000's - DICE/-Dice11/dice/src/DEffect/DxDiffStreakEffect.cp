// --------------------------------------------------------------------------------//// DxDiffStreakEffect -- difference render as streaking lines//// 2005.02.27 	jht		Created.//// Copyright (c) 2005 John Henry Thompson. All rights reserved.// --------------------------------------------------------------------------------#include "DxDiffStreakEffect.h"#include "DxImage_js.h"#include "DxImage.h"#include "dicejs.h"// --------------------------------------------------------------------------------DxDiffStreakEffect::DxDiffStreakEffect(void *wrapperObj )	: DxDiffEffect(wrapperObj ){	this->diffTolerance = 40;}#if 0// --------------------------------------------------------------------------------DxDiffStreakEffect::~DxDiffStreakEffect(){}#endif// ---------------------------------------------------------------------------------void	DxDiffStreakEffect::ComputeImage(){	int	capPix;	int diffwPix;	int	diffTolerance_x3;	int			inside;		diffTolerance_x3 = this->diffTolerance * 3;#define CODE_OUTTER_LOOP	 inside = 0;	#define CODE_INNER_LOOP \	/* Show line streak on change */ \	{ \		capPix = sourceLinePtr[0] + sourceLinePtr[1] + sourceLinePtr[2];   \		diffwPix = (previousLinePtr[0] + previousLinePtr[1] + previousLinePtr[2]) - capPix;  \		if (diffwPix < -diffTolerance_x3 || diffwPix > diffTolerance_x3) \		{ \			/* There is  difference */ \			inside = ! inside; \		} \		if (inside) \		{ \			/* Show image */ \			outputLinePtr[0] = sourceLinePtr[0]; \			outputLinePtr[1] = sourceLinePtr[1]; \			outputLinePtr[2] = sourceLinePtr[2]; \		} \		else \		{ \			/* No diff, show black */ \			outputLinePtr[0] = outputLinePtr[1] = outputLinePtr[2] = 0; \		} \	} \#include "DiffEffectLoop.inc"}// --------------------------------------------------------------------------------// --------------------------------------------------------------------------------