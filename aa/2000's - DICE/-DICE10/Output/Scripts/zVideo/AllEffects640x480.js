// DelayEffect on a Movie demow = 640; h = 480	// The dimension of the movie, should get from movie file laterimg = new Image(w, h);	// Create an image buffer to store frame from moviecam = new Camera();cam.output = img;//mov = new Movie();		// Create a Movie object//mov.output = img;		// Movie will play into image buffer//mov.pickFile();		// Present a file picker dialog boxwin = new Window(2, 45, 640, 480);	// Window use to present the result of the Effectwin.show();img2 = new Image(w, h);		// Create image buffer for the effecteff = new DelayEffect(); // Effect: The image difference is colorizedeff.input = img			// The image from the movie is feed to the effecteff.output = img2eff.delay = 40	// How much delay before image shows upeff.delay = 4proj = new Projector();		// Project simply copies input to outputproj.input = img2;proj.output = win;eff.diffTolerance = 100;	// 0-255 how much to consider pixels differenteff.diffTolerance = 40color_int = new Color(255,0,0)	// Color to apply to image differenceeff.color = color_int;function setupReportWindow(){	var w = new Window( 640+80 /*-left-*/, 480 + 80 /*-top-*/, 400 /*-width-*/, 100 /*-height-*/ )	w.title = "report";	w.ctl1 = new TextField( w, "This is a test ", 5, 10, 380, 22 );	w.ctl1.visible = 1	w.ctl2 = new PushButton( w, "Eff1", 10, 50, 100, 22);	w.ctl2.visible = 1;	w.ctl2.enabled = 1;	w.show();	return w;}var win2;win2 = setupReportWindow();frameCount = 0;startTime = GetCurrentEventTime();lastNow = startTime;function processThem(){	//mov.process();	cam.process();	eff.process();	proj.process();		stepColorCyle();		issueReport();}function spendTime(){	processThem();}function issueReport(){	frameCount++;	now2 = GetCurrentEventTime();	lapse = now2 - startTime;	fps = frameCount / lapse ;			if (win2 != undefined && (now2 - lastNow) > 1.0 )	{		lapse = Math.round( lapse * 100 ) / 100;		fps = Math.round( fps * 100 ) / 100;		//win2.ctl1.title = "Lapse "+lapse+" Frame "+frameCount+" Fps "+fps;		win2.ctl1.title = " Fps "+fps;		lastNow = now2;	}}function setupColorCyle(){	color = new Array();	colorCycleDelta = new Array();	colorCycleCount = 30;	colorCycleIndex = 0;		var i;	for (i = 0; i < 3; i++)	{		colorCycleDelta[i] = 255.0 / colorCycleCount;		color[i] = 0;	}}setupColorCyle();function stepColorCyle(){	var i;	for (i = 0; i < 3; i++)	{		color[i] += colorCycleDelta[i];	}	colorCycleIndex++;	if (colorCycleIndex >= colorCycleCount)	{		var		color_target;				for (i = 0; i < 3; i++)		{			color_target = Math.random() * 255;			colorCycleDelta[i] = (color_target - color[i]) / colorCycleCount;		}				colorCycleIndex = 0;	}	color_int.red = color[0];	color_int.green = color[1];	color_int.blue = color[2];}processThem();