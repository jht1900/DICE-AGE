// Apply effects to movie file frame-by-frameinputFileName = "movie1.mov";outputFileName = "movie1-fr-diffconv2.mov";nwindim = 1src = new Movie();//src.pickFile();src.openFile( AppPath()+"/"+inputFileName );width = src.width;high = src.height;src.stop();img = new Image(width, high);src.output = img;winWidth = width*nwindim; winHigh = high*nwindim;//------------------------------------img2 = new Image(width, high);		// Create image buffer for the effectimg3 = new Image(width, high);		// Create image buffer for the effecteff = new ConvolveEffect(); // Effect: The image difference is colorizedeff.input = img2;			// The image from the movie is feed to the effecteff.output = img3;eff2 = new DiffTrailColorEffect(); // DiffTrailEffect -- The image difference is left as a traileff2.input = img;eff2.output = img2;eff2.diffTolerance = 40color_int = new Color(0,0,0)	// Color to apply to image differenceeff2.color = color_int;win2 = new Window(5, 50, winWidth, winHigh);	// Window use to present the result of the Effectwin2.show();proj2 = new Projector();		// Project simply copies input to outputproj2.input = img3;proj2.output = win2;proj3 = new Projector();		// Project simply copies input to outputproj3.input = img3;proj3.output = img2;//------------------------------------load("u_report.js");var report_win = setupReportWindow();load("u_colorCycle.js");var colCycle = setupColorCycle(color_int);movmak = new MovieMaker();//movmak.pickFile();movmak.timeScale = src.timeScale;movmak.frameDuration = 100;movmak.createFile( AppPath(), outputFileName);//frameRecordCount = 30 * 8;frameRecordCount = src.frameCount;processThem();function processThem(){	src.process();	eff2.process();	eff.process();	proj2.process();	proj3.process();		if (frameRecordCount > 0) {		movmak.addFrame( img3 );		frameRecordCount--;		src.goNextFrame();	}	else {		movmak.finish();	}		stepColorCycle(colCycle);	issueReport(report_win);}function spendTime(){	processThem();}function minfo(){	return "frameCount:"+ src.frameCount +		" currentTime:"+ src.currentTime +		" timeScale:"+ src.timeScale +		" width:"+ src.width +		" height:"+ src.height +		" duration:"+ src.duration ;}