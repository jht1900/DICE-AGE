/* History:Copyright © 2001 John Henry Thompson. All rights reserved2001.05.22	jht	Split off.*/#include "CCapturePane.h"// ---------------------------------------------------------------------------------void	CCapturePane::ComputeAverage(){	const BitMap	*pSource;	const BitMap	*pDest;	GrafPtr	myPort = GetMacPort();	PixMapHandle		pixMapHd;	PixMapHandle		pixMapAvgHd;	AVG_TYPE 				*avgBufPtr;	int					hcount, vcount, width, height;	Rect				box;		UInt8*				srcPtr;	UInt8*				dstPtr;		int					srcRowBytes, dstRowBytes;		UInt8*				srcLinePtr;	UInt8*				dstLinePtr;		int					i;		pixMapHd = GetGWorldPixMap(gwSourcePtr);	pixMapAvgHd = GetGWorldPixMap(gwAvgPtr);		srcPtr = (UInt8*)GetPixBaseAddr( pixMapHd );	dstPtr = (UInt8*)GetPixBaseAddr( pixMapAvgHd );	srcRowBytes = (**pixMapHd).rowBytes & 0x3FFF;	dstRowBytes = (**pixMapAvgHd).rowBytes & 0x3FFF;		avgBufPtr = avgBufferPtr;		box = (**pixMapHd).bounds;	width = box.right - box.left;	height = box.bottom - box.top;	//dstPtr += width*4;	dstPtr += 1;		for (vcount = height; vcount > 0; vcount--, srcPtr += srcRowBytes, dstPtr += dstRowBytes)	{		srcLinePtr = srcPtr+1;		dstLinePtr = dstPtr;		for (hcount =  width; hcount > 0; hcount--, srcLinePtr+=4, dstLinePtr+=4, avgBufPtr+=3)		{			for (i = 0; i < 3; i++)			{				avgBufPtr[i] = (srcLinePtr[i] + avgBufPtr[i]*(stillScale-1))/stillScale;				dstLinePtr[i] = avgBufPtr[i];			}		}	}#if 1	/* Draw averge */	pSource = GetPortBitMapForCopyBits( gwAvgPtr );	pDest = GetPortBitMapForCopyBits( myPort );	CopyBits( pSource, pDest, &captureRect, &drawRect, inkMode, 0);		gwLastOutput = gwAvgPtr;#endif}