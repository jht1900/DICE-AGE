// ===========================================================================// COutlineTable.h			   ©1997-2002 Metrowerks Inc. All rights reserved.// ===========================================================================// Original Author: John C. Daub////	Subclass and concrete instantiation of LOutlineTable#pragma once#include <LOutlineTable.h>#include <LCommander.h>#include <Files.h>class COutlineTable : public LOutlineTable,						public LListener,						public LCommander {public:	enum { class_ID = 'Cout' };						COutlineTable( LStream *inStream );	virtual				~COutlineTable();	virtual void		ListenToMessage(MessageT inMessage, void *ioParam);	LOutlineItem * 		GetLastItem();		LOutlineItem * 		GetSelectedItem();	virtual Boolean			ObeyCommand(									CommandT			inCommand,									void*				ioParam);										virtual void			FindCommandStatus(								CommandT			inCommand,								Boolean&			outEnabled,								Boolean&			outUsesMark,								UInt16&				outMark,								Str255				outName);protected:	virtual	void		FinishCreateSelf();private:		void				AddFolder(FSSpec &theFSSpec);	void				AddFile(FSSpec &FSSpec);	void				ExecuteSelection();					// defensive programming										COutlineTable();						COutlineTable( const COutlineTable &inOriginal );	COutlineTable&		operator=( const COutlineTable &inOriginal );};