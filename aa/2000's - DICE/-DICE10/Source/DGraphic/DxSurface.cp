// --------------------------------------------------------------------------------//// Abstract Drawing surface, to accomdate windows & gworlds//// 2005.02.24 	jht		Created.//// Copyright (c) 2005 John Henry Thompson. All rights reserved.// --------------------------------------------------------------------------------#include "DxSurface.h"#include "dicejs.h"// --------------------------------------------------------------------------------DxSurface::DxSurface(void *wrapperObj  )	: DxGeneric(wrapperObj ){	}// --------------------------------------------------------------------------------DxSurface::~DxSurface(){}// --------------------------------------------------------------------------------void DxSurface::Process( ){}// --------------------------------------------------------------------------------Boolean DxSurface::GetProp( DxPropID propId, DxPropType propType, void **outResult ){	switch (propId)	{		case kDxProp_value:		{			switch (propType)			{				case kDxType_GWorldPtr:				case kDxType_CGrafPortPtr:					if (outResult)						*outResult = this->gworldPtr;					return TRUE;									case kDxType_DxSurface:					if (outResult)						*outResult = this;					return TRUE;			}			break;		}	}	if (outResult)		*outResult = 0;	return FALSE;}// --------------------------------------------------------------------------------Boolean DxSurface::SetProp( DxPropID propId, DxPropType propType, void *newValue ){	return FALSE;}// --------------------------------------------------------------------------------void DxSurface::CopyPixels( DxSurface *input, 			Rect *sourceRect, Rect *destRect, int inkMode, RgnHandle maskRgn){	const BitMap	*pSource;	const BitMap	*pDest;	GrafPtr			savedPort;	int				err;		if (! this->gworldPtr)		return;		GetPort (&savedPort);		MacSetPort (this->gworldPtr );	pSource = GetPortBitMapForCopyBits( input->gworldPtr );	pDest = GetPortBitMapForCopyBits( this->gworldPtr );	CopyBits( pSource, pDest, sourceRect, destRect, inkMode, 0);	err = QDError();	MacSetPort (savedPort);}// --------------------------------------------------------------------------------void DxSurface::GetBounds( Rect *outRect){	if (! this->gworldPtr)		return;		GetPortBounds( this->gworldPtr, outRect );}// ---------------------------------------------------------------------------------// ---------------------------------------------------------------------------------