// ===========================================================================//	CCaptureWind.h// ===========================================================================#pragma once#include <LWindow.h>#include "CCapturePane.h"#include <Files.h>#include "CPermWind.h"//#define KEEP_CAPTURE_WINDOW_ALIVEclass CCaptureWind : #ifdef KEEP_CAPTURE_WINDOW_ALIVE	public CPermWind,  // enable to dissable closing#else	public LWindow,#endif	public LListener {	public:				static LWindow*			CreateShapeWindowStream(LStream	*inStream)								{return new CCaptureWind(inStream);}										CCaptureWind(LStream *inStream);		virtual					~CCaptureWind();						virtual	void			FinishCreateSelf();		virtual LModelObject*	HandleCreateElementEvent(									DescType			inElemClass,									DescType			inInsertPosition,									LModelObject*		inTargetObject,									const AppleEvent	&inAppleEvent,									AppleEvent			&outAEReply);											virtual void			HandleAppleEvent(									const AppleEvent	&inAppleEvent,									AppleEvent			&outAEReply,									AEDesc				&outResult,									SInt32				inAENumber);				virtual void			GetAEProperty(									DescType		inProperty,									const AEDesc	&inRequestedType,									AEDesc			&outPropertyDesc) const;											virtual void			SetAEProperty(									DescType		inProperty,									const AEDesc	&inValue,									AEDesc			&outAEReply);											virtual bool			AEPropertyExists( DescType	inProperty) const;		virtual	void			GetImportantAEProperties(AERecord &outRecord) const;		virtual void			HandleSetDiffBackImage(									const AppleEvent	&inAppleEvent,									AppleEvent			&outAEReply,									AEDesc				&outResult,									SInt32				inAENumber);		virtual void			DrawSelf();		virtual	void			AddSubModel(										LModelObject	*inSubModel);		virtual	void			RemoveSubModel(										LModelObject	*inSubModel);					virtual void	ListenToMessage(MessageT inMessage, void *ioParam);				virtual Boolean		HandleKeyPress( const EventRecord	&inKeyEvent);	// note: shapes are stored in the mSubModels list.	protected:				void	UExtractFromAEDesc_TheFileSpec(const AEDesc	&inValue, FSSpec &fss );				void 	SetEffectNum( SInt32 newEffectNum );				void	SyncOtherPane( int num, PaneIDT pid);				CCapturePane *theCapturePane;};