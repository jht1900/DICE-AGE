/* History:Copyright © 2001 John Henry Thompson. All rights reserved2001.05.??	jht	created*/#include <UDrawingState.h>#include "CStatusPane.h"#include "QDOffscreen.h"const ResIDT	rCURS_Finger		= 1000;static int gotBack = 0;		// ---------------------------------------------------------------------------------//		¥ CStatusPane// ---------------------------------------------------------------------------------CStatusPane::CStatusPane(){}// ---------------------------------------------------------------------------------//		¥ CStatusPane(SPaneInfo&)// ---------------------------------------------------------------------------------CStatusPane::CStatusPane(	const SPaneInfo	&inPaneInfo )		: LPane( inPaneInfo ){}// ---------------------------------------------------------------------------------//		¥ CStatusPane(const CStatusPane&)// ---------------------------------------------------------------------------------CStatusPane::CStatusPane(	const CStatusPane	&inOriginal )		: LPane( inOriginal ){}// ---------------------------------------------------------------------------------//		¥ CStatusPane(LStream*)// ---------------------------------------------------------------------------------CStatusPane::CStatusPane(	LStream	*inStream )		: LPane( inStream ){}// ---------------------------------------------------------------------------------//		¥ ~CStatusPane// ---------------------------------------------------------------------------------CStatusPane::~CStatusPane(){#if 0	ComponentResult	result = noErr;		// Clean up	if (SeqGrabber != 0L)	{		result = CloseComponent (SeqGrabber);		SeqGrabber = 0L;	}		if (gworldPtr)	{		DisposeGWorld( gworldPtr );		gworldPtr = 0;	}#endif}// ---------------------------------------------------------------------------------//		¥ FinishCreateSelf// ---------------------------------------------------------------------------------voidCStatusPane::FinishCreateSelf(){	StartIdling();}// ---------------------------------------------------------------------------//	¥ SpendTime								[public, virtual]// ---------------------------------------------------------------------------//	Idle time: Flash the insertion cursorvoidCStatusPane::SpendTime(	const EventRecord&	/* inMacEvent */){#if 0	ComponentResult	result = noErr;		if (SeqGrabber)	{		FocusDraw();				result = SGIdle (SeqGrabber);				UpdateFromGWorld();	}#endif}// ---------------------------------------------------------------------------------//		¥ DrawSelf// ---------------------------------------------------------------------------------voidCStatusPane::DrawSelf(){#if 0	ComponentResult	result = noErr;		if (SeqGrabber)	{		result = SGUpdate( SeqGrabber, 0);				UpdateFromGWorld();				//result = SGIdle (SeqGrabber);	}#endif}// ---------------------------------------------------------------------------------//		¥ ClickSelf// ---------------------------------------------------------------------------------voidCStatusPane::ClickSelf(	const SMouseDownEvent	&inMouseDown ){#pragma unused( inMouseDown )	// Just beep.	::SysBeep( 9 );	gotBack = 0;	#if 0	VideoSettings(SeqGrabber, VideoChannel, GetMacPort());	#endif	#if 0	ComponentResult	result = noErr;		if (SeqGrabber)	{		result = SGUpdate( SeqGrabber, 0);				//result = SGIdle (SeqGrabber);	}#endif}#if 0// ---------------------------------------------------------------------------------//		¥ AdjustCursorSelf// ---------------------------------------------------------------------------------voidCStatusPane::AdjustCursorSelf(	Point				inPortPt,	const EventRecord	&inMacEvent ){#pragma unused( inPortPt, inMacEvent )	// Get the cursor.	CursHandle	theCursH = ::GetCursor( rCURS_Finger );	// Set the cursor.	if ( theCursH != nil ) ::SetCursor( *theCursH );}#endif