(defun go()	(mreset)	(mnlines mnlines)	(mnfields mnfields)	;; (DisplayFrame 1)	(setq mag-wino (wino mag-def 'mag 200 154 0 40))	(if (nump h-offset) 		(set-val mag-wino 0 h-offset)	)	(if (nump v-offset) 		(set-val mag-wino 1 v-offset)	)		(setq menu-list (cons mag-wino () ))		(setq highcut-wino (wino highcut-def 'high 16 100 202 40))	(if (nump highcut-offset)		(set-val highcut-wino 0 highcut-offset)	)		(setq menu-list (cons highcut-wino menu-list))		(setq ldv-wino (wino ldv-def 'ldv 256 118 220 40))	(setq menu-list (cons ldv-wino menu-list))		(setq exec-wino (wino exec-def 'exec 100 75 115 218))	(setq menu-list (cons exec-wino menu-list))		(setq sum-wino (wino () 'sum 100 100 3 218))		(sh))(setq exec-def 	'(	(radio grab grab-toggle)		(radio pick pick-toggle)		(radio show show-toggle)	))(defun pick-toggle(a)	(setq pick-on a))(defun grab-toggle(a)	(setq grab-on a))(defun show-toggle(a)	(setq show-on a))(if (not (nump mnlines))	(setq mnlines 192))(if (not (nump mnfields))	(setq mnfields 42))				(defun reduce()	(setq mnlines 72)	(mnlines mnlines)		(setq mnfields 16)	(mnfields mnfields))(defun full()	(setq mnlines 192)	(mnlines mnlines)		(setq mnfields 42)	(mnfields mnfields)		(moffset 1)	(mstart 12))(defun ds() 	(dispsum sum-wino))(defun sh()	(show menu-list 'exec-loop))(setq grab-on () )(setq show-on t )(setq old-pick 0)(setq pick-on () )(setq searching () )(defun exec-loop()	(if grab-on (grab-loop))	(if pick-on (do-pick))	t)(defun do-pick()	(prog (x)		(setq x (lpick))		(if (not (eq x old-pick))			(dispatch x)		)		(setq old-pick x)	)	t)(defun dispatch (x)	(caseq x		(0 (play-play))		(1 (play-play))		(2 (play-play))		(3 (play-rev))		(4 (play-rev))		(5 (Stop))		(6 (Stop))	))(setq action-list '(play-play stop-stop))(setq action (car action-list))(setq action-next action-list)(defun some-pick-action()	(apply action ())	(setq action-next (cdr action-next))	(if (nullp action-next)		(setq action-next action-list)	)	(setq action (car action-next)))(defun grab-loop()	(mgrab)	(if show-on (mget mag-wino))	(sumxy)	(if show-on (dispsum sum-wino))	t)(setq highcut-def	'(	(vslider 256 highcut-update)	))(defun highcut-update(wino val)	(setq highcut-offset val)	(mhigh val)	(mgrab)	(mget mag-wino))(setq mag-def	'(	(hslider 63 hor-update)		(vslider 256 vert-update)	))(defun hor-update(wino val)	(setq h-offset val)	(moffset val)	(if wino		(progn			(mgrab)			(mget mag-wino)		)	))(defun vert-update(wino val)	(setq v-offset val)	(mstart val)	(if wino		(progn			(mgrab)			(mget mag-wino)		)	))(setq ldv-def	'(	(button markI	mark-in-point	$1B)		(button markO	mark-out-point	#=)			(button gotoI	goto-in-mark	#/)		(button gotoO	goto-out-mark	#*)				(button play	play-play		#7)		(button play-	play-rev		#8)		(button stop	stop-stop		#9)			(button review	preview-clip	#-)		(button jog+	jog-add			#4)		(button jog-	jog-sub			#5)		(button slowF	play-slow-fwd	#6)		(button slowR	play-slow-rev	#+)		(button ff		play-fast-fwd	#1)		(button rev		play-fast-rev	#2)					(button add		add-clip		#3)		(button show	play-clip-list	$03)		(button goto	goto-frame		#0)	))(defun goto-frame()	(prog (x)		(setq x (read () ))		; (print x)		(search-to x)	))(defun play-rev()	(FastSpeed 1)	(SearchRev $0000))(defun play-fast-fwd()	(FastSpeed 3)	(SearchFwd $ffff))(defun play-fast-rev()	(FastSpeed 3)	(SearchRev $0000))(defun play-slow-fwd()	(SlowSpeed 6)	(SearchFwd $ffff))(defun play-slow-rev()	(SlowSpeed 6)	(SearchRev $0000))(setq clip-in ())(setq clip-out ())(defun goto-in-mark()	(if (nump clip-in)		(search-to clip-in)	))(defun goto-out-mark()	(if (nump clip-out)		(search-to clip-out)	))(defun play-play()	(Play 0))(defun stop-stop()	(Stop 0))(defun jog-add()	(StepFwd 0))(defun jog-sub()	(StepRev 0))(setq clip-list ())(defun play-clip-list()	(mapcan 'play-clip clip-list))(defun add-clip()	(if (and (nump clip-in) (nump clip-out))		(prog (g)			(setq g (gensym))			(put g 'clip (list clip-in clip-out))			(if (listp clip-list)				(rplacd (last clip-list) (cons g () ))				(setq clip-list (cons g () ))			)			(setq clip-in ())			(setq clip-out ())					)		(print 'null-clip)	))(defun mark-in-point()	(setq clip-in (vdreadpos)))(defun mark-out-point()	(setq clip-out (vdreadpos)))(defun preview-clip()	(CharGenOff 0)	(if (nump clip-in)		(search-to clip-in)	)	(if (nump clip-out)		(AutoStop clip-out)	)	(CharGenOn 0))(defun search-to(x)	(Search x)	(vdwait x))(defun play-clip(a)	(play-clip2 (get a 'clip)))(defun play-clip2(c)	(if (listp c)		(progn 			(CharGenOff 0)			(Search (car c))			(vdwait (car c))			(AutoStop (cadr c))			(vdwait (cadr c))			(CharGenOn 0)		)	)	())(defun msr(x s)	(prog (lapse tg)		(if (< x 0)			(setq tg 54000)			(setq tg x)		)		(Search tg) 		(vdwait tg)		(while (and (> s 0) (< tg 54001))			(setq tg (+ tg x))			(setq lapse (tick-count))			(Search tg)			(vdwait tg)			(print (- (tick-count) lapse))			(setq s (- s 1))		)	))(defun mver()	(mwrite $a6)	(mread))(defun tmag()	(prog (lap count)		(setq lap (tick-count))		(setq count 0)		(while (not (buttonp))			;;(mgrab)			;;(sumxy)			(grab-loop)			(setq count (+ 1 count))		)		(return 			(list				(- (tick-count) lap)				count			)		)	))