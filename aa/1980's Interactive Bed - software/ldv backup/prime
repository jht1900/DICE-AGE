(defun prime(to)	(prog (n i)		(if (listp primes)			t			(setq primes (list 3 2))		)		(setq i (car primes))		(setq n 0)		(while (< n to)			(if (primep i primes)				(progn					(setq primes (cons i primes))					(setq n (+ n 1))				)			)			(setq i (+ i 2))		)		primes	))(defun primep(i primes)	(if (listp primes)		(if (eq (mod i (car primes))				0			)			()			(primep i (cdr primes))		)		t	))					