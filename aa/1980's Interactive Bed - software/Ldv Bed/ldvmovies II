/*10/5/87 The interactive movies.*/#include "qDef.h"#include "vdisc.h"#define MaxSameCount	5/* -------------------- movSound --------------------------------------*/movSound(sndList, func)	qList	*sndList;	int		(*func)();	{	unsigned int	soundOut;	unsigned int	soundIn;	unsigned int	pos;	int				soundOn;	qList			*sp;	int				v = -2, ov;	int				first = 1;	int				sameCount = 0;		if (!Listp(sndList))		soundOn = 0;	else		{		soundOn = 1;		soundOut = 0;		SelPort(AUD);		z(STOP,0);		SelPort(VID);		}		for (;;)		{		ov = v;		v = (*func)();		if (ov == v && ov >= 0)			{			if (++sameCount >= MaxSameCount)				{				zzz(TEXT,8,0," ");				sameCount = 0;				}			}		else			sameCount = 0;					if (v < 0) 			{			if (first && v == -1) continue;			if (soundOn)				{				SelPort(AUD);				z(STOP,0);				SelPort(VID);				}			return (v);			}		first = 0;		if (! soundOn) continue;		SelPort(AUD);		pos = z(POS,0);		if (pos >= soundOut)			{			if (!Listp(sndList))				{				z(STOP,0);				SelPort(VID);				z(VIDEO,0);				z(AUDIO,0);				z(STOP,0);				return (-3);				}			sp = (qList *)Car(sndList);			sndList = Cdr(sndList);			if (!Listp(sp))				{				soundIn = (unsigned int)sp;				if (!Listp(sndList))					soundOut = 0xFFFF;				else					{					soundOut = Car(sndList);					sndList = Cdr(sndList);					}				}			else {				soundIn = Car(sp);				sp = Cdr(sp);				if (!Listp(sp))					soundOut = 0xFFFF;				else					soundOut = Car(sp);				}			if (soundIn > 0 && soundIn < 54001)				{								z(SEARCH, soundIn);				z(SEARCHWAIT,0);				z(PLAY,0);				}			else SysBeep(1);			}		SelPort(VID);		}	}	/* -------------------- mov1 -------------------------------------------*/static int 	on;static mov1(sndList)	qList	*sndList;	{	int	_mov1();		on = -2;	zzz(TEXT, 8, 0, "  [  [  -  o  -  [");	return (movSound(sndList, &_mov1));	}static _mov1()	{	int		n, c;	Byte	*cp;		if (Button()) return (-4);		MagGrab();	Sumxy();	n = thePick();	if (n != on)		{		if (on < 0) 			{			z(VIDEO,1);			}		on = n;		if (n < 0) 			{			z(VIDEO,0);			z(AUDIO,0);			z(STOP,0);			return (n);			}		c = 2*n;		n = n>>1;		switch (n)			{			case 5:			case 4:				z(PLAY,0);				z(AUDIO,3);				cp = "]";				break;			case 3:				z(SLOWFWD,3);				z(AUDIO,3);				cp = "-";				break;			case 2:				z(STOP,0);				z(AUDIO,0);				cp = "O";				break;			case 1:				z(SLOWFWD,3);				z(AUDIO,3);				cp = "-";				break;			case 0:				z(PLAY,0);				z(AUDIO,3);				cp = "]";				break;			default:				cp = "!";				break;							}		if (c > 19) c = 19;		zzz(TEXT, 8, 19 - c, cp);		}	return (n);	}/* -------------------- mov -------------------------------------------*/static mov()	{	int		on = -1;	int		n, c;	Byte	*cp;		z(FRAME,0);	z(CHARGEN,1);	z(STOP,0);	z(AUDIO,0);	z(AUDIOSQ,0);			while (! Button())		{		MagGrab();		Sumxy();		n = thePick();		if (n != on)			{			if (on < 0) 				{				z(VIDEO,1);				}			on = n;			if (n < 0) 				{ 				z(VIDEO,0);				z(AUDIO,0);				z(STOP,0);				z(CLEARTEXT,0);				continue; 				}			c = 2*n;			if (c > 19) c = 19;			n >>= 1;			switch (n)				{				case 5:					z(STOP,0);					z(AUDIO,0);					cp = "O";					break;				case 4:					z(SLOWFWD,4);					z(AUDIO,3);					cp = "-";					break;				case 3:				case 2:					z(PLAY,0);					z(AUDIO,3);					cp = "]";					break;				case 1:					z(FF,2);					z(AUDIO,3);					cp = "]]";					break;				case 0:					z(FF,4);					z(AUDIO,3);					cp = "]]";					break;				}			zzz( TEXT, 8, 19 - c, cp);			}		}	}/* -------------------- mov1a -------------------------------------------*/static mov1a()	{	int		on = -1;	int		n, c;	Byte	*cp;		z(FRAME,0);	z(CHARGEN,1);	z(STOP,0);	z(AUDIO,0);	z(AUDIOSQ,0);			while (! Button())		{		MagGrab();		Sumxy();		n = thePick();		if (n != on)			{			if (on < 0) 				{				z(VIDEO,1);				}			on = n;			if (n < 0) 				{ 				z(VIDEO,0);				z(AUDIO,0);				z(STOP,0);				z(CLEARTEXT,0);				continue; 				}			c = 2*n;			n = (n+1)>>1;			switch (n)				{				case 5:					z(AUDIO,0);					z(FF, 2);					cp = "]]";					break;				case 4:					z(PLAY,0);					z(AUDIO,3);					cp = "]";					break;				case 3:					z(SLOWFWD,3);					z(AUDIO,3);					cp = "-";					break;				case 2:					z(AUDIO,0);					z(STOP,0);					cp = "O";					break;				case 1:					z(SLOWFWD,3);					z(AUDIO,3);					cp = "-";					break;				case 0:					z(PLAY,0);					z(AUDIO,3);					cp = "]";					break;				}			if (c > 19) c = 19;			zzz( TEXT, 8, 19 - c, cp);			}		}	}/* -------------------- mov2 -------------------------------------------*/static mov2(nbeat)	{	int		on = -1;	int		n, c;	Byte	*cp;	unsigned int	periodOut;	unsigned int	pos;	unsigned int	songStart = 15846;	unsigned int	beatPeriod = nbeat;	int		vs = 1;		z(FRAME,0);	z(CHARGEN,1);	z(VIDEO,0);	z(AUDIO,0);	z(AUDIOSQ,1);	z(SEARCH, songStart);	z(SEARCHWAIT,0);	periodOut = 0xFFFF;		while (! Button())		{		pos = z(POS,0);		if (pos >= periodOut)			{			vs = 0;			z(STOP,0);			}		MagGrab();		Sumxy();		n = thePick();		if (n/2 != on/2)			{			if (on < 0) 				{				z(PLAY,0);				z(VIDEO,1);				z(AUDIO,3);				}			on = n;			if (n < 0) 				{ 				z(VIDEO,0);				z(AUDIO,0);				z(SEARCH, songStart);				z(SEARCHWAIT, 0);				periodOut = 0xFFFF;					continue; 				}			z(PLAY,0);			vs = 1;			periodOut = pos + beatPeriod;			}		}	}	/* -------------------- mov2a -------------------------------------------*/static mov2a()	{	int		on = -1;	int		n, c;	Byte	*cp;	unsigned int	periodOut;	unsigned int	pos;	unsigned int	songStart = 15846;	int		vs = 1;		z(FRAME,0);	z(CHARGEN,1);	z(VIDEO,0);	z(AUDIO,0);	z(AUDIOSQ,0);	z(SEARCH, songStart);	z(SEARCHWAIT,0);	periodOut = 0xFFFF;		while (! Button())		{		MagGrab();		Sumxy();		n = thePick();		if (n/2 != on/2)			{			if (on < 0) 				{				z(PLAY,0);				z(VIDEO,1);				z(AUDIO,3);				}			on = n;			if (n < 0) 				{ 				z(VIDEO,0);				z(AUDIO,0);				z(SEARCH, songStart);				z(SEARCHWAIT, 0);				periodOut = 0xFFFF;					continue; 				}			z(VIDEO,vs);			vs ^= 1;			}		}	}/* -------------------- mov2b -------------------------------------------*/static mov2b()	{	int		on = -1;	int		n, c;	Byte	*cp;	unsigned int	periodOut;	unsigned int	pos;	unsigned int	songStart = 22421;	int		vs = 1;		z(FRAME,0);	z(CHARGEN,1);	z(VIDEO,0);	z(AUDIO,0);	z(AUDIOSQ,1);	z(SEARCH, songStart);	z(SEARCHWAIT,0);	periodOut = 0xFFFF;		while (! Button())		{		MagGrab();		Sumxy();		n = thePick();		if (n/2 != on/2)			{			if (on < 0) 				{				z(PLAY,0);				z(VIDEO,1);				z(AUDIO,3);				}			on = n;			if (n < 0) 				{ 				z(VIDEO,0);				z(AUDIO,0);				z(SEARCH, songStart);				z(SEARCHWAIT, 0);				periodOut = 0xFFFF;					continue; 				}			if (vs) z(PLAY,0);			else z(STOP,0);			vs ^= 1;			}		}	}/* -------------------- mov3 -------------------------------------------*/#define nmov	4qItem	FOpen(), FRead(), FClose();static mov3(ev, f1, f2, f3, f4)	Env		*ev;	qItem	f1;	qItem	f2;	qItem	f3;	qItem	f4;	{	int		on = -1;	int		n, c;	int		i;	qItem	lp[nmov];	qList	*rp[nmov], *ll;	qItem	fn, fp, xx;	unsigned int	pos;	unsigned int	outPos;	int		ci, oci = -1;	int		dosearch;		for (i = 0; i < nmov; i++)		{		fn = * ((&f1) + i);		fp = FOpen(ev, fn);		if (Type(fp) != qIstructType)			{			return;			}		xx = FRead(ev, fp);		FClose(ev, fp);		PrintConsole(ev, Car(xx));		lp[i] = (qItem) Cdr(xx);		rp[i] = (qList *)lp[i];		}			z(FRAME,0);	z(CHARGEN,1);	z(VIDEO,0);	z(AUDIO,0);	z(AUDIOSQ,1);	z(STOP,0);		ci = 0;	outPos = 0xFFFF;		while (! Button())		{		MagGrab();		Sumxy();		dosearch = 0;		n = thePick();		if (n != on)			{			if (on < 0) 				{				z(VIDEO,1);				z(AUDIO,3);				}			on = n;			if (n < 0) 				{ 				z(VIDEO,0);				z(AUDIO,0);				z(STOP,0);				zzz(TEXT, 8, 1, " ");				outPos = 0xFFFF;				continue; 				}			c = n<<1;			if (c > 19) c = 19;			zzz( TEXT, 8, 19 - c, "]");			n = (n+1)/3;			if (n > 3) n = 3;			ci = n;			dosearch = (ci != oci);			oci = ci;			}		pos = z(POS,0);		if (pos >= outPos || dosearch)			{			/* Play next clip in list. checking for wrap around.			*/			ll = rp[ci];			if (! Listp(ll))				{				ll = (qList *)lp[ci];				}			rp[ci] = Cdr(ll);			ll = (qList *) Car(ll);			if (Length(ll) >= 2)				{				z(SEARCH, (unsigned int) Car(ll));				z(SEARCHWAIT, 0);				z(PLAY, 0);				outPos = (unsigned int) Cadr(ll);				z(SETMARK, outPos);				outPos -= 3;				}			}		}	}/* -------------------- mov4 -------------------------------------------*/static Byte *markers[] = { "-", "+", "0", "*" };qItem	FOpen(), FRead(), FClose();static mov4(ev, f1, f2, f3, f4)	Env		*ev;	qItem	f1;	qItem	f2;	qItem	f3;	qItem	f4;	{	int		on = -1;	int		n, c;	int		i;	qItem	lp[nmov];	qList	*rp[nmov], *ll;	qItem	fn, fp, xx;	unsigned int	pos;	unsigned int	outPos, in;	int		ci, oci = -1;	int		dosearch;	unsigned int	songStart = 5875;		for (i = 0; i < nmov; i++)		{		fn = * ((&f1) + i);		fp = FOpen(ev, fn);		if (Type(fp) != qIstructType)			{			return;			}		xx = FRead(ev, fp);		FClose(ev, fp);		PrintConsole(ev, Car(xx));		lp[i] = (qItem) Cdr(xx);		rp[i] = (qList *)lp[i];		}			z(FRAME,0);	z(CHARGEN,1);	z(VIDEO,0);	z(AUDIO,0);	z(AUDIOSQ,1);	z(STOP,0);	SelPort(AUD);	z(SEARCH, songStart);	z(SEARCHWAIT, 0);	z(PLAY,0);	SelPort(VID);			ci = 0;	outPos = 0xFFFF;		while (! Button())		{		MagGrab();		Sumxy();		dosearch = 0;		n = thePick();		if (n != on)			{			if (on < 0) 				{				z(VIDEO,1);				z(AUDIO,3);				}			on = n;			if (n < 0) 				{ 				z(VIDEO,0);				z(AUDIO,0);				z(STOP,0);				zzz(TEXT, 8, 1, " ");				outPos = 0xFFFF;				continue; 				}			c = n<<1;			if (c > 19) c = 19;			n = (n+1)/3;			if (n > 3) n = 3;			zzz( TEXT, 8, 19 - c, markers[n]);			ci = n;			dosearch = (ci != oci);			oci = ci;			}		pos = z(POS,0);		if (pos >= outPos || dosearch)			{			/* Play next clip in list. checking for wrap around.			*/			ll = rp[ci];			if (! Listp(ll))				{				ll = (qList *)lp[ci];				}			rp[ci] = Cdr(ll);			ll = (qList *) Car(ll);			if (Length(ll) >= 2)				{				in = (unsigned int) Car(ll);				z(VIDEO,0);				z(SEARCH, in);				z(SEARCHWAIT, 0);				z(VIDEO,1);				}			}		}	}/* ------------------------------ mov5 --------------------------------*/static mov5(ev, f1, f2, f3, f4)	Env		*ev;	qItem	f1;	qItem	f2;	qItem	f3;	qItem	f4;	{	int		on = -1;	int		n, c;	int		i;	qItem	lp[nmov];	qList	*rp[nmov], *ll;	qItem	fn, fp, xx;	unsigned int	pos;	unsigned int	outPos;	int		ci, oci = -1;	int		dosearch;	unsigned int 	songStart = 36777;		for (i = 0; i < nmov; i++)		{		fn = * ((&f1) + i);		fp = FOpen(ev, fn);		if (Type(fp) != qIstructType)			{			return;			}		xx = FRead(ev, fp);		FClose(ev, fp);		PrintConsole(ev, Car(xx));		lp[i] = (qItem) Cdr(xx);		rp[i] = (qList *)lp[i];		}			z(FRAME,0);	z(CHARGEN,1);	z(VIDEO,0);	z(AUDIO,0);	z(AUDIOSQ,1);	z(STOP,0);	SelPort(AUD);	z(SEARCH, songStart);	z(SEARCHWAIT, 0);	z(PLAY,0);	SelPort(VID);				ci = 0;	outPos = 0xFFFF;		while (! Button())		{		MagGrab();		Sumxy();		dosearch = 0;		n = thePick();		if (n != on)			{			if (on < 0) 				{				z(VIDEO,1);				z(AUDIO,3);				}			on = n;			if (n < 0) 				{ 				z(VIDEO,0);				z(AUDIO,0);				z(STOP,0);				zzz(TEXT, 8, 1, " ");				outPos = 0xFFFF;				continue; 				}			c = n<<1;			if (c > 19) c = 19;			zzz( TEXT, 8, 19 - c, "]");			n = (n+1)/3;			if (n > 3) n = 3;			ci = n;			dosearch = (ci != oci);			oci = ci;			}		pos = z(POS,0);		if (pos >= outPos || dosearch)			{			/* Play next clip in list. checking for wrap around.			*/			ll = rp[ci];			if (! Listp(ll))				{				ll = (qList *)lp[ci];				}			rp[ci] = Cdr(ll);			ll = (qList *) Car(ll);			if (Length(ll) >= 2)				{				z(SEARCH, (unsigned int) Car(ll));				z(SEARCHWAIT, 0);				z(SLOWFWD, 3);				outPos = (unsigned int) Cadr(ll);				z(SETMARK, outPos);				outPos -= 3;				}			}		}	}/* ------------------------------ mov6 --------------------------------*/static mov6(ev, f1, f2, f3, f4)	Env		*ev;	qItem	f1;	qItem	f2;	qItem	f3;	qItem	f4;	{	int		on = -1;	int		n, c;	int		i;	qItem	lp[nmov];	qList	*rp[nmov], *ll;	qItem	fn, fp, xx;	unsigned int	pos;	unsigned int	outPos;	int		ci, oci = -1;	int		dosearch;	unsigned int 	songStart = 22021;		for (i = 0; i < nmov; i++)		{		fn = * ((&f1) + i);		fp = FOpen(ev, fn);		if (Type(fp) != qIstructType)			{			return;			}		xx = FRead(ev, fp);		FClose(ev, fp);		PrintConsole(ev, Car(xx));		lp[i] = (qItem) Cdr(xx);		rp[i] = (qList *)lp[i];		}			z(FRAME,0);	z(CHARGEN,1);	z(VIDEO,0);	z(AUDIO,0);	z(AUDIOSQ,1);	z(STOP,0);	SelPort(AUD);	z(SEARCH, songStart);	z(SEARCHWAIT, 0);	z(PLAY,0);	SelPort(VID);				ci = 0;	outPos = 0xFFFF;		while (! Button())		{		MagGrab();		Sumxy();		dosearch = 0;		n = thePick();		if (n != on)			{			if (on < 0) 				{				z(VIDEO,1);				z(AUDIO,3);				}			on = n;			if (n < 0) 				{ 				z(VIDEO,0);				z(AUDIO,0);				z(STOP,0);				zzz(TEXT, 8, 1, " ");				outPos = 0xFFFF;				continue; 				}			c = n<<1;			if (c > 19) c = 19;			zzz( TEXT, 8, 19 - c, "]");			n = (n+1)/3;			if (n > 3) n = 3;			ci = n;			dosearch = (ci != oci);			oci = ci;			}		pos = z(POS,0);		if (pos >= outPos || dosearch)			{			/* Play next clip in list. checking for wrap around.			*/			ll = rp[ci];			if (! Listp(ll))				{				ll = (qList *)lp[ci];				}			rp[ci] = Cdr(ll);			ll = (qList *) Car(ll);			if (Length(ll) >= 2)				{				z(SEARCH, (unsigned int) Car(ll));				z(SEARCHWAIT, 0);				z(FF, 3);				outPos = (unsigned int) Cadr(ll);				z(SETMARK, outPos);				outPos -= 3;				}			}		}	}/* ---------------------------------------------------------------------- */qIfunc movieFuncs[] ={	{ mov, "mov", 0 + qRetInt },	{ mov1, "mov1", 1 + qRetInt },	{ mov1a, "mov1a", 0 + qRetInt },	{ mov2, "mov2", 1 + qCint1 + qRetInt },	{ mov2a, "mov2a", 0 + qRetInt },	{ mov2b, "mov2b", 0 + qRetInt },	{ mov3, "mov3", 4 + qRetInt + qEnvArg },	{ mov4, "mov4", 4 + qRetInt + qEnvArg },	{ mov5, "mov5", 4 + qRetInt + qEnvArg },	{ mov6, "mov6", 4 + qRetInt + qEnvArg },		{ 0, 0, 0 }};/* --------------------------------------------------------------------- */